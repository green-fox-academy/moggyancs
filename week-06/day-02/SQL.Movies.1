https://lagunita.stanford.edu/courses/DB/SQL/SelfPaced/courseware/ch-sql/seq-exercise-sql_movie_query_core/

Q1: Find the titles of all movies directed by Steven Spielberg. 

	SELECT title FROM Movie
	WHERE director = "Steven Spielberg"

Q2: Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order. 

	SELECT DISTINCT year FROM Movie
		LEFT JOIN Rating ON Movie.mID = Rating.mID
	WHERE stars >= 4
	ORDER BY year ASC
	
Q3: Find the titles of all movies that have no ratings. 

	SELECT title FROM Movie
	LEFT JOIN Rating ON Rating.mID = Movie.mID
	WHERE stars IS NULL
	
Q4: Some reviewers didn't provide a date with their rating. Find the names of all reviewers who have ratings with a NULL value for the date. 

	SELECT name FROM Reviewer
	LEFT JOIN Rating ON Rating.rID = Reviewer.rID
	WHERE ratingDate IS NULL
	
Q5: Write a query to return the ratings data in a more readable format: reviewer name, movie title, stars, and ratingDate. Also, sort the data, first by reviewer name, then by movie title, and lastly by number of stars. 

	SELECT name, title, stars, ratingDate FROM Rating
	LEFT JOIN Reviewer ON Reviewer.rID = Rating.rID
	LEFT JOIN Movie ON Movie.mID = Rating.mID
	ORDER BY name, title, stars
	
Q6: For all cases where the same reviewer rated the same movie twice and gave it a higher rating the second time, return the reviewer's name and the title of the movie. 

	SELECT name, title FROM Rating R1
		LEFT JOIN Movie ON R1.mID = Movie.mID
		LEFT JOIN Reviewer ON Reviewer.rID = R1.rID
		LEFT JOIN Rating R2 ON R1.rID = R2.rID

	WHERE R1.rID = R2.rID 
		AND R1.mID = R2.mID
		AND R1.stars < R2.Stars
		AND R1.ratingDate < R2.ratingDate

Q7: For each movie that has at least one rating, find the highest number of stars that movie received. Return the movie title and number of stars. Sort by movie title. 

	Select title, MAX(stars) FROM Rating
	LEFT JOIN Movie ON Movie.mID = Rating.mID
	GROUP BY title
	ORDER BY title
	
Q8: For each movie, return the title and the 'rating spread', that is, the difference between highest and lowest ratings given to that movie. Sort by rating spread from highest to lowest, then by movie title. 

	SELECT title, MAX(stars) - MIN(stars) AS Rating_spread FROM Rating
		LEFT JOIN Movie ON Movie.mID = Rating.mID
	GROUP BY title
	ORDER BY Rating_spread DESC, title
	
Q9: Find the difference between the average rating of movies released before 1980 and the average rating of movies released after 1980. (Make sure to calculate the average rating for each movie, then the average of those averages for movies before 1980 and movies after. Don't just calculate the overall average rating before and after 1980.) 

	SELECT 
	(SELECT AVG(early.stars) FROM (SELECT AVG(stars) as stars FROM Rating
				LEFT JOIN Movie ON Rating.mID = Movie.mID
				WHERE year < 1980
				GROUP BY Movie.mID) as early)   
	- 
	(SELECT AVG(late.stars) FROM (SELECT AVG(stars) as stars FROM Rating
				LEFT JOIN Movie ON Rating.mID = Movie.mID
				WHERE year > 1980
				GROUP BY Movie.mID) as late)         
				
	 FROM (SELECT AVG(stars) FROM Rating)